unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

set -sg escape-time 0

set -g mouse on

bind q killp

# Ctrl-Space to zoom current pane
unbind f
bind-key f resize-pane -Z

# More intuitive pane splitting key-bindings, open all in current path
bind-key C-h split-window -v  -c '#{pane_current_path}'
bind-key C-v split-window -h  -c '#{pane_current_path}'
unbind '"'
unbind %
bind c new-window -c '#{pane_current_path}'

# Easy resizing of panes with fine and coarse adjustment
bind -n M-Right resize-pane -R 2
bind -n M-Down resize-pane -D 1
bind -n M-Up resize-pane -U 1
bind -n M-Left resize-pane -L 2

# colon :
bind : command-prompt

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Number windows starting at 1, renumber as windows are added / removed
set-option -g base-index 1
set-option -g renumber-windows on

# set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"

# use vi mode
# setw -g mode-keys vi
# set -g status-keys vi

# soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

# increase scrollback lines
set -g history-limit 10000

set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
